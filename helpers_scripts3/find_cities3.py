# -*- coding: utf-8 -*-

import phonetics
import numpy as np

def levenshtein(seq1, seq2):
    size_x = len(seq1) + 1
    size_y = len(seq2) + 1
    matrix = np.zeros ((size_x, size_y))
    for x in range(size_x):
        matrix [x, 0] = x
    for y in range(size_y):
        matrix [0, y] = y

    for x in range(1, size_x):
        for y in range(1, size_y):
            if seq1[x-1] == seq2[y-1]:
                matrix [x,y] = min(
                    matrix[x-1, y] + 1,
                    matrix[x-1, y-1],
                    matrix[x, y-1] + 1
                )
            else:
                matrix [x,y] = min(
                    matrix[x-1,y] + 1,
                    matrix[x-1,y-1] + 1,
                    matrix[x,y-1] + 1
                )
    return (matrix[size_x - 1, size_y - 1])


#! /usr/bin/env python
# -*- coding: utf-8 -*-
import difflib
from thefuzz import fuzz, process
with open('../static/cities_be.txt', 'r', encoding='utf-8') as file:
    # Читаем строки из файла и помещаем их в массив
    lines = file.readlines()
words = []
for line in lines:
    words.append(line.replace('\n', ''))


words_error = [
"МАНЬКАВІЧЫ",
"МАНЕЖАВІЧЫ",
"МАННКАВЧЫ",
"МІНЫАВІЧЫ",
"ПАД",
"БАЛО",
"БАЛРКЬ",
"ВАЛАМЫН",
"ВАЛАШЫН",
"ВАЛОЖЫН",
"[ВАпСЖЬН",
"[ВАГСЛЫН]",
"[Емлмын",
"НАВАПОЛАЦК",
"НАРЛРОЛАЦК",
"НАВАДОЛАЦК",
"НАВАДОЛАЦК",
"НАВАРОЛАШК",
"Нвамд",
"нОвОРоЛоцК",
"нОВОРоЛОЦК",
"-0в6",
"КОР",
"КОГРЫН",
"КОЕТЫН",
"(КОГГЫН",
"[КОЕРЫН",
"КОГРЫН",
"КОГРЫН",
"ЯЫНЫ",
"МЯНІНЬ",
"ІМЯНІНЫ",
"ІМЯНІНЫ",
"ІМЯНІНЫ",
"ІМЯНІНЫ",
"ПМЯНІНЫ",
"МЯКІНЫ",
"ІМЯНІНЫ",
"[МЯКІНЫ",
"ПІмЯМіНЫ",
"ІМЯННЫ",
"[ІМяЧНЫ",
"[АЛОЖЫН",
"[АЛеЖЫН",
"[ВАЛОЖЫН",
"Ешяы",
"ГАННАРЫ",
"МНАРЫ",
"ГАНЧАРЫ",
"АНКАРЫ",
"ГАНЧАРЫ",
"зэ-9ЖЫН",
"Г",
"ВАЛОКЫН",
"ВАЛ",
"4ын",
"[БАЛОЛЫН",
"БАЛОЖЫН",
"[АдСЖЫН",
"БЫГНЫЦ",
"БЫСТГЫЦА",
"БЫСТГЫЦА",
"БЫСТГЫЦА",
"ОСПРЫЧь",
"Оаыч",
"[новас",
"новоРолоцк",
"новосолоць",
"новод",
"@лбцй",
"нова",
"ОЦК",
"нова",
"2401",
"нОво",
"=2:",
"БЕШТТХОННЫ",
"БЕШАЛОЫЧЫ",
"БЕШАЧЖОЫЧЫ",
"БЕШІММОВІЧЫ",
"НАВЛООЛАЦК",
"[НАВАПОЛІАЦК",
"[НАВАПОЛАЦК",
"[НАВАПОЛАЦК",
"[НАВАПОЛАЦК",
"[НАВАПОЛАЦК",
"НАВАПОЛІАЦК",
"НАВАЛОЛАЦК",
"НАВАПОЛАЦК",
"НАВ?",
"БЕд",
"новопоЛоц",
"нОвОРоЛОцК",
"НОвоРо0_",
"олосоло",
"НОППРОЛОцК",
"НОВОЯМЦК",
"НОПОРОЛОЦК",
"НОБПРБЛОЦК",
"НОНОООЛОЦК",
"НОВОПЛОЦК",
"НОБОР ЛЦК",
"НОБПГОЛОЦК",
"ЕОЗПБЭНОЦА",
"РЭчЫА",
"РЭЦА",
"[свІЛАЧ",
"СРІСЛАЧ",
"СРІОЛАЧ",
"БАРІ",
"БАР;",
"дд",
"(БАР)",
"БАРРКАВА",
"ІАВА",
"БАР)",
"ДЗЮНА]",
"[ДЗЮНА",
"ДЗЮНА",
"ДЗУНА",
"ДЗУНА)",
"[САЛАНІКІ",
"САЛАНІКІ |",
" САЛАНІКІ",
"САЛАНІКІ",
"САЛАНІКІ",
"ААЛІН",
"МАГДАЛІН",
" [АГДАЛІН",
"нОвОсолОцк",
"новог",
"БлОцк",
"нова",
"Б201",
"новод",
"[_",
"75:",

]
def remove_all_chars(input_string):
    return ''.join(char for char in input_string if char.isalnum())
for word in words_error:
    correct = []
    word = remove_all_chars(word.lower())
    for item in words:
        item = item.lower()
        if levenshtein(item, word) < 5:
            correct.append((item,levenshtein(item, word)))
    print(word, correct)