diag_point1 = (53.9448316670, 27.4727083330)
diag_point2 = (53.9448400000, 27.4728166670)
#(53.944301667, 27.461348333)
#(53.944283333, 27.461)
#(53.94088, 27.469365)
#(53.940826667, 27.469198333)
def square_coordinates(p1, p2):
    # Находим координаты центра квадрата
    center_x = (p1[0] + p2[0]) / 2
    center_y = (p1[1] + p2[1]) / 2

    # Вычисляем разницу по x и y между центром и одной из вершин
    delta_x = p1[0] - center_x
    delta_y = p1[1] - center_y

    # Находим координаты оставшихся вершин квадрата
    p3 = (center_x - delta_y, center_y + delta_x)
    p4 = (center_x + delta_y, center_y - delta_x)

    return p3, p4, p1, p2


# Заданные координаты одной из диагоналей
p1 = (53.94088, 27.469365)#(53.944301667, 27.461348333)#(53.9448316670, 27.4727083330)
p2 = (53.940826667, 27.469198333)#(53.944283333, 27.461)#(53.9448400000, 27.4728166670)

# Вычисляем координаты остальных вершин квадрата
p3, p4, p1_updated, p2_updated = square_coordinates(p1, p2)

print(f"Координаты вершин квадрата:")
print(f"p1: {p1_updated}")
print(f"p2: {p2_updated}")
print(f"p3: {p3}")
print(f"p4: {p4}")

x1, y1 = p1
x2, y2 = p3

# Находим координаты середины линии
midpoint_x = (x1 + x2) / 2
midpoint_y = (y1 + y2) / 2

# Выводим координаты середины линии
print("Координаты середины линии:")
print(f"x: {midpoint_x}, y: {midpoint_y}")