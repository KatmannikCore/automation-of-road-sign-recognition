
import numpy as np
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit

# Задаем данные для точек графика
X = np.array([624, 610, 597, 591, 576, 567, 543, 534, 517, 498, 469, 447, 430, 414, 401, 376, 364, 354, 345, 334, 328, 320, 321, 314, 314, 318, 318, 316, 319])
Y = np.array([0, 34, 25, 39, 40, 43, 46, 54, 56, 63, 71, 77, 88, 101, 96, 118, 113, 124, 117, 131, 133, 147, 132, 145, 145, 137, 136, 138, 134])

X = np.array([693, 679, 673, 664, 654, 646, 636, 628, 620, 604, 588, 578, 564, 543, 527, 505, 484])
Y = np.array([25, 31, 34, 39, 41, 41, 42, 46, 48, 48, 52, 55, 56, 61, 68, 67, 50])
# Функция, которую мы будем подгонять к точкам
def nonlinear_function(x, a, b, c):
    return a * np.sin(b * x) + c

# Подгоняем нелинейную модель к точкам графика
params, covariance = curve_fit(nonlinear_function, X, Y)

# Извлекаем полученные параметры модели
a, b, c = params

# Строим график с использованием точек и аппроксимирующей нелинейной функции
plt.scatter(X, Y, label='Точки графика')
#plt.plot(X, nonlinear_function(X, a, b, c), 'r', label='Нелинейная аппроксимирующая функция')
plt.xlabel('Значения по оси X')
plt.ylabel('Значения по оси Y')
plt.title('Аппроксимация точек нелинейного графика')
plt.legend()
plt.show()

# Выводим полученные параметры модели
print("Полученные параметры модели: a =", a, "b =", b, "c =", c)
